/**
 * generated by Xtext
 */
package fr.nantes.univ.alma.mvc.generator;

import java.io.IOException;
import java.util.Collections;
import java.util.Map;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.common.util.URI;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.emf.ecore.resource.Resource.Factory.Registry;
import org.eclipse.emf.ecore.resource.impl.ResourceSetImpl;
import org.eclipse.emf.ecore.xmi.impl.XMIResourceFactoryImpl;
import org.eclipse.xtext.generator.IFileSystemAccess;
import org.eclipse.xtext.generator.IGenerator;
import org.eclipse.xtext.xbase.lib.Exceptions;
import org.eclipse.xtext.xbase.lib.InputOutput;

/**
 * Generates code from your model files on save.
 */
@SuppressWarnings("all")
public class LanguageGenerator implements IGenerator {
  public void doGenerate(final Resource resource, final IFileSystemAccess fsa) {
    InputOutput.<String>println("STARTIIIIIIIIIIIIIIIIIING!");
    final Registry registery = Registry.INSTANCE;
    final Map<String,Object> map = registery.getExtensionToFactoryMap();
    XMIResourceFactoryImpl _xMIResourceFactoryImpl = new XMIResourceFactoryImpl();
    map.put("mvc", _xMIResourceFactoryImpl);
    ResourceSetImpl _resourceSetImpl = new ResourceSetImpl();
    final ResourceSetImpl resSet = _resourceSetImpl;
    final URI uri = URI.createURI("model/model.mvc");
    String _path = uri.path();
    String _plus = ("URI: " + _path);
    InputOutput.<String>println(_plus);
    final Resource res = resSet.createResource(uri);
    EList<EObject> _contents = res.getContents();
    EList<EObject> _contents_1 = resource.getContents();
    _contents.addAll(_contents_1);
    try {
      res.save(Collections.EMPTY_MAP);
    } catch (final Throwable _t) {
      if (_t instanceof IOException) {
        final IOException e = (IOException)_t;
        e.printStackTrace();
      } else {
        throw Exceptions.sneakyThrow(_t);
      }
    }
  }
}
